{"version":3,"sources":["apis/jsonPlaceHolder.js","actions/index.js","components/UserHaeder.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchUser","id","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceHolder","get","concat","sent","type","payload","data","stop","_x2","apply","this","arguments","UserHaeder","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","user","props","react_default","createElement","className","name","Component","connect","state","ownProps","users","find","userId","PostList","renderList","_this","posts","map","post","title","body","components_UserHaeder","fetchPostsAndUsers","_ref3","_callee3","getState","_context3","_ref","_callee","_context","_x","_","chain","uniq","forEach","_x3","_x4","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","thunk","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.6b0672bf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com',\r\n});","import _ from 'lodash';\r\nimport jsonPlaceHolder from '../apis/jsonPlaceHolder';\r\n\r\n////original version\r\n// export const fetchPosts =  () => {\r\n//    return ( async (dispatch, getState) => {\r\n//     const response = await jsonPlaceHolder.get('/posts');\r\n    \r\n//     dispatch({type: 'FETCH_POST', payload: response});\r\n//    });\r\n// };\r\n\r\n//short version\r\nexport const fetchPosts =  () => async dispatch=> {\r\n     const response = await jsonPlaceHolder.get('/posts');\r\n     dispatch({type: 'FETCH_POST', payload: response.data});\r\n    };\r\n\r\n\r\n\r\nexport const fetchUser = (id) => async dispatch => {\r\n    const response = await jsonPlaceHolder.get(`/users/${id}`);\r\n    dispatch({\r\n        type: 'FETCH_USER', payload: response.data\r\n    });\r\n};\r\n// export const fetchUser = (id) =>  dispatch =>{ _fetchUser(id, dispatch);}\r\n\r\n// const _fetchUser = _.memoize( async (id, dispatch) => {\r\n//     const response = await jsonPlaceHolder.get(`/users/${id}`);\r\n//     dispatch({\r\n//         type: 'FETCH_USER', payload: response.data\r\n//     });\r\n// });\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState)  => {\r\n  await  dispatch(fetchPosts());\r\n//   const userIds =_.uniq(_.map(getState().posts,'userId'));\r\n//   userIds.forEach(id => dispatch(fetchUser(id)));\r\n\r\n    _.chain(getState().posts).map('userId').uniq().forEach(id=>dispatch(fetchUser(id))).value();\r\n\r\n};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n//import {fetchUser} from '../actions';\r\n\r\nexport class UserHaeder extends Component {\r\n    // componentDidMount() {\r\n    //     this.props.fetchUser(this.props.userId)\r\n       \r\n    // }\r\n  render() {\r\n     // const user = this.props.users.find(user=> user.id === this.props.userId);\r\n     const {user} = this.props;\r\n      if(!user){\r\n          return null;\r\n      }\r\n      \r\n    return (\r\n      <div className=\"header\">\r\n        {user.name}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        user: state.users.find(user => user.id === ownProps.userId)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHaeder);\r\n// export default connect(mapStateToProps, {fetchUser})(UserHaeder);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {fetchPostsAndUsers} from '../actions';\r\nimport UserHeader from './UserHaeder';\r\n\r\nclass PostList extends Component {\r\n  componentDidMount() {\r\nthis.props.fetchPostsAndUsers();\r\n  }\r\n  renderList = () => {\r\n    return this.props.posts.map(post=> {\r\n      return <div className=\"item\" key={post.id}>\r\n        <i className=\"large middle aligned icon user\"/>\r\n        <div className=\"content\">\r\n          <div className=\"description\">\r\n            <h2>{post.title}</h2>\r\n            <p>{post.body}</p>\r\n          </div>\r\n          <UserHeader userId={post.userId} />\r\n        </div>\r\n      </div>\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ui relaxed divided list\">\r\n        {this.renderList()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {fetchPostsAndUsers})(PostList);\r\n","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {combineReducers} from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state= [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_POST':\r\n            return action.payload;\r\n        case 'SELECT_POST':\r\n            return action.payload;\r\n\r\n        default: return state;\r\n    }\r\n};","export default (state= [], action ) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USER':\r\n            return [...state, action.payload];\r\n        default: \r\n        return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store ={createStore(reducers, applyMiddleware(thunk))}>\r\n        <App />\r\n    </Provider>, document.querySelector('#root')\r\n);"],"sourceRoot":""}